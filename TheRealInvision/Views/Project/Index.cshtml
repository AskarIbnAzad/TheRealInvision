@model IEnumerable<TheRealInvision.Models.DbModels.Project>
@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<style>
    .card {
        transition: transform 0.3s ease-in-out, box-shadow 0.3s ease-in-out;
    }

    .share-user-card-box .user-img {
        max-width: 40px;
        width: 100%;
        height: 40px;
        border-radius: 50px;
        overflow: hidden;
    }

    table, th, td {
        border: 1px solid black;
        border-collapse: collapse;
    }

    .dropdown button i:hover {
        color: gray;
        transform: scale(1.2); /* Slight scaling effect */
        transition: color 0.2s, transform 0.2s;
    }
</style>


<div class="d-flex justify-content-between align-items-center mb-4">
    <h4 class="mb-0">Projects</h4>
    <a asp-action="Create" class="btn btn-outline-success">Add Project</a>
</div>


<div class="row row-cols-1 row-cols-md-3 g-4">
    @foreach (var project in Model)
    {
        <div class="col">
            <div class="card text-white bg-dark mb-3">
                <!-- Display First Image or Placeholder -->
                <a asp-action="Details" asp-route-id="@project.Id">
                    <img src="@(project.ProjectImages.OrderBy(image => image.Position).FirstOrDefault()?.ImageUrl ?? "/images/placeholder.png")"
                         class="card-img-top"
                         alt="Project Image"
                         style="height: 200px; object-fit: cover;">
                </a>

                <div class="card-body" style="border-top:1px solid green">
                    <h6 class="card-title"><i class="fa fa-bookmark" aria-hidden="true"></i> @project.Title</h6>
                </div>

                @if (project.IsAdmin || project.IsOwner || project.IsEditor)
                {
                    <div class="dropdown" style="position: absolute; top: 10px; right: 10px;">
                        <button class="btn" type="button" id="dropdownMenuButton" data-bs-toggle="dropdown" aria-expanded="false"
                                style="background-color: transparent; border: 1px solid black; padding: 10px; background:white">
                            <i class="fas fa-ellipsis-v" style="color: black; font-size: 18px;"></i>
                        </button>
                        <ul class="dropdown-menu dropdown-menu-end" aria-labelledby="dropdownMenuButton" style="right: auto; left: 0;">
                            <li><a class="dropdown-item" asp-action="Create" asp-route-id="@project.Id">Edit</a></li>
                            <li><a class="dropdown-item" onclick="grantProjectPermission('@project.Id')">Permissions</a></li>
                            @if (project.IsAdmin || project.IsOwner)
                            {
                                <li><a class="dropdown-item" onclick="removeProject('@project.Id')">Delete</a></li>
                            }
                        </ul>
                    </div>
                }
            </div>
        </div>



    }
</div>
<div class="modal fade" id="exampleModal1" tabindex="-1" aria-labelledby="exampleModal1Label" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-dialog-scrollable">
        <div class="modal-content">
            <div class="modal-header">
                <h1 class="modal-title fs-5" id="exampleModal1Label">Share</h1>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body p-0" style="margin: 3px">
                <table class="table table-bordered" id="projectPermissionBox" width="100%">
                </table>
            </div>
        </div>
    </div>
</div>

<script>
        function removeProject(projectId) {
        // Use SweetAlert2 to show confirmation dialog
        Swal.fire({
            title: 'Are you sure?',
            text: "You won't be able to undo this!",
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Yes, delete it!'
        }).then((result) => {
            if (result.isConfirmed) {
                // Perform AJAX call to delete the project
                $.ajax({
                    url: '/Project/Delete', // Replace with your controller name
                    type: 'POST',
                    data: { id: projectId }, // Pass the projectId to the backend
                    success: function(response) {
                        Swal.fire(
                            'Deleted!',
                            'Your project has been deleted.',
                            'success'
                        ).then(() => {
                            // Refresh the page after successful deletion
                            location.reload();
                        });
                    },
                    error: function(error) {
                        Swal.fire(
                            'Error!',
                            'There was a problem deleting the project.',
                            'error'
                        );
                    }
                });
            }
        });
    }

    function grantProjectPermission(projectId)
    {

            $.ajax({
                url: '/Project/GetProjectPermission', // Replace 'YourController' with your actual controller name
                type: 'GET',
                data: { projectId: projectId },
                success: function (data) {
                    // Target the element with ID #projectPermissionBox
                    var targetElement = $('#projectPermissionBox');
                    targetElement.empty(); // Clear any existing content

                        var header=` <thead><tr>
                                        <th scope="col" style="text-align:left">
                                            User Name
                                        </th>
                                        <th scope="col" style="text-align:left">
                                            User Email
                                        </th>
                                        <th scope="col" style="text-align:center">
                                            Permission
                                        </th>
                                    </tr></thead>`;
                        targetElement.append(header);
                    // Iterate through the fetched data
                    data.forEach(function (result) {
                  var userCard = `<tbody><tr>
                                   <th scope="row">${result.name}</th>
                                   <td>${result.email}</td>
                                   <td style="text-align:center">
                                       <select onchange="modifyPermission('${projectId}', '${result.id}', this.value)">
                                           <option value="0" ${result.permission == 0 ? 'selected' : ''}>None</option>
                                           <option value="1" ${result.permission == 1 ? 'selected' : ''}>Viewer</option>
                                           <option value="2" ${result.permission == 2 ? 'selected' : ''}>Editor</option>
                                       </select>
                                   </td>
                                 </tr></tbody>`;


                        targetElement.append(userCard);
                    });
                           if (!$('#exampleModal1').hasClass('show')) {
                             $('#exampleModal1').modal('show');
                                }

                },
                error: function (xhr, status, error) {
                    console.error('Error fetching permissions:', error);
                    alert('Failed to load permissions. Please try again.');
                }
            });

    }

    function modifyPermission(projectId, userId, selectedPermission) {
        $.ajax({
            type: 'POST',
            url: '/Project/ModifyPermission?projectId='+projectId+'&userId='+userId+'&permission='+selectedPermission, // Replace 'YourControllerName' with the actual name of your controller
            contentType: 'application/json',
            success: function(response) {
                console.log("Permission modified successfully:", response);
                // Handle the response (e.g., update UI or show a success message)
            },
            error: function(error) {
                console.error("Error modifying permission:", error);
                // Handle errors (e.g., show an error message to the user)
            }
        });
    }

</script>